from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from bot.utils.sheet_filter import get_next_parameters


def parameter_keyboard(current: list[str]) -> InlineKeyboardMarkup:
    """
    –°–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
    :param current: –¢–µ–∫—É—â–∏–π —Ä—è–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: ["–ú—Ç—Å", "–û—Ç –∞–≥–µ–Ω—Ç–∞"]
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    """

    next_parameters = get_next_parameters(current)

    keyboard = InlineKeyboardBuilder()

    # callback: question_{id –ø–∞—Ä–∞–º–µ—Ç—Ä–∞}_{–Ω–æ–º–µ—Ä –ø–æ —Å–ø–∏—Å–∫—É}
    for i, button in enumerate(next_parameters):
        keyboard.button(text=button, callback_data=f"question_{len(current)}_{i}")

    # –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é -> –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–π –¥–∏–∞–ª–æ–≥
    if len(current) == 0:
        keyboard.button(text="üòá –°–≤–æ–±–æ–¥–Ω—ã–π –¥–∏–∞–ª–æ–≥", callback_data=f"/ai")


    keyboard.adjust(1)
    keyboard = keyboard.as_markup()
    return keyboard
